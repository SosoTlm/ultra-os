# nova/sys/config.py

import os
import json

CONFIG_PATH = os.path.expanduser("~/unstables")

DEFAULT_CONFIG = {
    "appearance": "dark",
    "theme_color": "#133baaff",
    "version": "v3.234-nova",
    "developer_mode": True,
    "unstable_flags": {
        "allow_kernel_override": False,
        "unsafe_threading": True,
        "force_ui_refresh": True
    },
    "system_checks": {
        "integrity_check": False,
        "module_validation": False
    }
}

def load_config():
    if not os.path.exists(CONFIG_PATH):
        save_config(DEFAULT_CONFIG)
    with open(CONFIG_PATH, "r") as f:
        return json.load(f)

def save_config(data):
    with open(CONFIG_PATH, "w") as f:
        json.dump(data, f, indent=4)

def get(key, default=None):
    config = load_config()
    return config.get(key, default)

def set(key, value):
    config = load_config()
    config[key] = value
    save_config(config)

def reset():
    save_config(DEFAULT_CONFIG)
